Given an array arr[], its starting position l and its ending position r. Sort the array using the merge sort algorithm.

Examples:

Input: arr[] = [4, 1, 3, 9, 7]
Output: [1, 3, 4, 7, 9]
=================================
class Solution {

    void mergeSort(int arr[], int l, int r) {
        
        
        if(r>l)
        {
            int mid = (r + l)/2;
            mergeSort(arr,l,mid);
            mergeSort(arr,mid+1,r);
            merge(arr,l,mid,r);     
            
        }
        
    }
    
    void merge(int arr[], int l, int mid, int r){
        
        int n1 = mid - l + 1;
        int n2 = r - mid; 
        
        int left[] = new int[n1];
        int right[] = new int[n2];
        
        for(int i=0; i < n1; i++)
        {
           left[i] = arr[l+i];
        }
        
        for(int j = 0; j < n2; j++)
        {
            right[j] = arr[mid+1+j];
        }
        
        // merge the left and right temp arrays
        int i=0, j=0;                                     
        int k = l;
        
        while(i < n1 && j < n2)
        {
            if(left[i] <= right[j]){
                arr[k] = left[i];
                i++;
                k++;
            }else{
                arr[k] = right[j];
                j++;
                k++;
            }
            
        }
          // Copy remaining elements of left[], if any
        while (i < n1) {
            arr[k] = left[i];
            i++;
            k++;
        }

        // Copy remaining elements of right[], if any
        while (j < n2) {
            arr[k] = right[j];
            j++;
            k++;
        }
        
        
    }
    
    
}

