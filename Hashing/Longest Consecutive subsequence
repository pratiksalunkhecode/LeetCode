Given an array arr of non-negative integers. Find the length of the longest sub-sequence such that elements in the subsequence are consecutive integers, the consecutive numbers can be in any order.

Examples:

Input: arr[] = [2, 6, 1, 9, 4, 5, 3]
Output: 6
Explanation: The consecutive numbers here are 1, 2, 3, 4, 5, 6. These 6 numbers form the longest consecutive subsquence.
=========================================
O(nlogn)
==========================================
class Solution {

    // Function to return length of longest subsequence of consecutive integers.
    public int findLongestConseqSubseq(int[] arr) {
        // code here
        int n = arr.length;
        Arrays.sort(arr);
        int res = 1;
        int curr = 1;
        
        for(int i = 1; i < n; i++)
        {
            
            if(arr[i] == arr[i-1]+1)
            {
                curr++;
            }else if(arr[i] != arr[i-1]) // handing duplicate element edge case
            {
                res = Math.max(res, curr);
                curr=1;
            }
        }
        res=Math.max(res,curr);
        return res;
    }
}
