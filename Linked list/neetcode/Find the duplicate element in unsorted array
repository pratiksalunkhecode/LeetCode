Q) Find the Duplicate Number
You are given an array of integers nums containing n + 1 integers. Each integer in nums is in the range [1, n] inclusive.
Every integer appears exactly once, except for one integer which appears two or more times. Return the integer that appears more than once.

Example 1:
Input: nums = [1,2,3,2,2]
Output: 2

======================================================================
class Solution {
    public int findDuplicate(int[] nums) {
  
    int slow = nums[0];
    int fast = nums[0];
    
    // Phase 1: Finding the intersection point inside the cycle
    do {
        slow = nums[slow];      // curr = curr.next
        fast = nums[nums[fast]]; // curr = curr.next.next
    } while (slow != fast);
    
    // Phase 2: Find the entry point to the cycle (duplicate number)
    slow = nums[0];
    while (slow != fast) {
        slow = nums[slow];
        fast = nums[fast]; // curr = curr.next
    }
    
    return slow;
       
    }
}
