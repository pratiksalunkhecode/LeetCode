Q) Remove Node From End of Linked List
Solved 
You are given the beginning of a linked list head, and an integer n.
Remove the nth node from the end of the list and return the beginning of the list.

Example 1:

Input: head = [1,2,3,4], n = 2
Output: [1,2,4]
===========================================================================================
Time: O(n)
Space: O(1)
==========================================================================================
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {

       int len = 0;
       ListNode curr = head;

       while(curr != null)
       {
        len++;
        curr = curr.next;
       }
       
       if(n == len)
       {
        return head.next;
       }
       
        curr = head;
        for (int i = 1; i < len - n; i++) {
            curr = curr.next;
        }
     
        curr.next = curr.next.next;

        return head;

    }
}
=======================================================================
Using dummy node 
starting from i = 0

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {

     ListNode dummy = new ListNode(0);
     dummy.next = head;

     if (head.next == null) {
    return head.next;
}


      int len = 0;
      ListNode curr = head; 
      while(curr != null)
      {
        len++;
        curr = curr.next;
      }

       if(len < n)
        {
            return head;
        }

     ListNode curr1 = dummy;
     for(int i = 0; i < len-n; i++)
     {
        curr1 = curr1.next;
     }

      curr1.next = curr1.next.next; 
    
      return dummy.next;

    }
}

