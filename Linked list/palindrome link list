Using Hasing
========================================================================
class Solution {
    // Function to check whether the list is palindrome.
    boolean isPalindrome(Node head) {
        // Your code here
        
        ArrayList<Integer> list = new ArrayList<>();
        
        Node curr = head;
        
        while(curr != null)
        {
            list.add(curr.data);
            curr = curr.next;
        }
        
        int start = 0; 
        int end = list.size() - 1;
        
        while(start < end)
        {
            if(!list.get(start).equals(list.get(end)))
            {
                return false;
            }
            
            start++;
            end--;
        }
        return true;
    }
}
===========================================================================
Using stack

class Solution {
    // Function to check whether the list is palindrome.
    boolean isPalindrome(Node head) {
        // Your code here
       
       Deque<Character> stack = new ArrayDeque<Character>();
       
     
       
       for(Node curr = head; curr != null; curr = curr.next)
       {
           stack.push((char) curr.data);
           
       }
       
       for(Node curr = head; curr != null; curr = curr.next)
       {
           if(stack.pop() != curr.data)
           {
               return false;
           }
       }
       return true;
       
    }
}

