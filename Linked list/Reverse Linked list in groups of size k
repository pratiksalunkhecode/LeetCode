Given a linked list, the task is to reverse every k node (where k is an input to the function) in the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should be considered as a group and must be reversed (See Example 2 for clarification).

Examples:

Input: Linked List: 1->2->2->4->5->6->7->8, k = 4
Output: 4 -> 2 -> 2 -> 1 -> 8 -> 7 -> 6 -> 5 

============================================================
class Solution {
    public static Node reverse(Node node, int k) {
        // Your code here
        
        Node curr = node;
        Node next = null;
        Node prev = null;
        int count = 0;
        
        while(curr != null && count < k)
        {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
            count++;
        }
        
        if(next != null){
        Node rest_head = reverse(next, k);
        node.next = rest_head;
        }
        return prev;
        
    }
}
