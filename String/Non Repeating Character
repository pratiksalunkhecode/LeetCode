Q) Given a string s consisting of lowercase Latin Letters. Return the first non-repeating character in s. If there is no non-repeating character, return '$'.
Note: When you return '$' driver code will output -1.

Examples:

Input: s = "geeksforgeeks"
Output: 'f'
Explanation: In the given string, 'f' is the first character in the string which does not repeat.

Time: O(n2)
Space: O(1)
========================================================================
class Solution {
    // Function to find the first non-repeating character in a string.
    static char nonRepeatingChar(String s) {
        // Your code here
        int n = s.length();
        for(int i = 0; i < n; i++)
        {
            boolean flag = false;
            for(int j = 0; j < n; j++)
            {
                if(i != j && s.charAt(i) == s.charAt(j)){
                    flag = true;
                    break;
                }
            }
            if(flag == false)
            {
                return s.charAt(i);
            }
        }
        return '$';
    }
}
===========================================================================
Time: O(n)
Space: O(1)

class Solution {
     public static final int CHAR=256;
    // Function to find the first non-repeating character in a string.
    static char nonRepeatingChar(String s) {
        // Your code here
        int n = s.length();
        int count[] = new int[CHAR];
        
        for(int i = 0; i < n; i++)
        {
            count[s.charAt(i)]++;
        }
        
        for(int i = 0; i < n; i++)
        {
            if(count[s.charAt(i)] == 1)
            {
                return s.charAt(i);
            }
        }
       return '$'; 
    }
}

